//API KEY: iZpEPEE9yi6m9N2a6Bzu5KL8bFVielx0
//program that communicates with Gify API and brings down 10 results of gifs based on what button is clicked
//buttons are generated by an array of topics that is looped through to create them
//gifs are displayed with their ratings as well
//all gifs can be paused and played 

//GLOBAL VARIABLES//
//One array to add to, one to reset to it's original state
var initialArray = ["Tim and Eric", "sweet drift", "Gucci Mane"];
var resetArray = ["Tim and Eric", "sweet drift", "Gucci Mane"];
var buttonDiv = $("#button-container")
var gifDiv = $("#gif-container");
//used to hold the object reference of the current topic being displayed
var currentGifObject = undefined;

//FUNCTIONS//

//displays the buttons when the page is loaded when a topic is added. Loops through the array again and displays buttons
function displayButtons(){
    buttonDiv.empty();
    for(var i = 0; i < initialArray.length; i++){
        //creates buttons with a "data-topic", which is used to search the API 
        var newButton = $("<button class = 'topic btn btn-primary' data-topic = '" + initialArray[i] + "'>")
        newButton.text(initialArray[i]);
        buttonDiv.append(newButton);
    };
};

//ajax call to display the gifs. adds the returned object to the global variable, loops through array and displays each gif url on the page
function displayGifs(queryURL){
    gifDiv.empty();
        $.ajax({
            url: queryURL,
            method: "GET"
        }).then(function(response){
    
            var results = response.data;
            currentGifObject = response.data;
            for (var i = 0; i < results.length; i++ ){
                var newDiv = $("<div id = 'item'" + i + ">")
                gifDiv.append(newDiv);
                var rating = results[i].rating;
                var p = $("<p>").text("Rating " + rating);
                var image = $("<img class = 'gif' data-number = " + i + ">").attr("src", results[i].images.fixed_height_still.url);
                newDiv.prepend(image);
                newDiv.prepend(p);

            }
        });
};

//runs when the user wants to play or pause a gif (initially thought the gifs were meant to be automatically played, hence hte pauseGIF name)
//collects the still and animated url from the current gif Object declared earlier, and compares the current URL to them, uses an IF statement to switch them. 
function pauseGif(gifIterator, clickedGif) {
    var pause = currentGifObject[gifIterator].images.fixed_height_still.url;
    var play = currentGifObject[gifIterator].images.fixed_height.url;
    var current = clickedGif.attr("src")
    if(current === play){
        clickedGif.attr("src", pause);
    } else {
        clickedGif.attr("src", play);
    }
};

//resets buttons (not a requirement, but I felt it was a good addition. )
function resetButtons(){
    initialArray = resetArray;
}

// FUNCTION CALLS //
$(document).ready(function(){
    //displays buttons after the page is loaded
    displayButtons();

    //SEARCH FOR GIFS 
    $("#button-container").on("click", "button", function() {
        console.log("running");
        //refers to the "data-topic" of the button clicked, and passes that into the API query URL, which is passed into the displayGifs function
        var searchTerm = $(this).attr("data-topic");
        //url limits rating to PG
        var queryURL = "https://api.giphy.com/v1/gifs/search?q=" + searchTerm + "&api_key=iZpEPEE9yi6m9N2a6Bzu5KL8bFVielx0&limit=10&rating=pg";
        displayGifs(queryURL);
        
    });

    //ADD A BUTTON
    $("#add-button").on("click", function(event){
        event.preventDefault();
        var topic = $("#button-input").val().trim();
        //only runs if there is text in the field and it is not a duplicate of another button
        if(topic.length > 0 && initialArray.includes(topic) == false){
            initialArray.push(topic);
            displayButtons();
        }

    });

    

    //PAUSE OR PLAY GIF
    $("#gif-container").on("click", ".gif", function(){
        //uses a data-number which is passed back to the currentObject, which can be used to collect properties 
        var gifIterator = $(this).attr("data-number")
        pauseGif(gifIterator, $(this))
    });

    //RESET BUTTONS
    $("#reset-button").on("click", function(){
        resetButtons();
        displayButtons();
    });

});
